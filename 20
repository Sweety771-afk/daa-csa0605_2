from itertools import combinations

def meet_in_the_middle(arr, target):
    n = len(arr)
    left_half = arr[:n//2]
    right_half = arr[n//2:]

    left_sums = {sum(comb) for r in range(len(left_half) + 1) for comb in combinations(left_half, r)}
    right_sums = {sum(comb) for r in range(len(right_half) + 1) for comb in combinations(right_half, r)}

    for left_sum in left_sums:
        if (target - left_sum) in right_sums:
            return True
    return False

# Example usage
arr = [1, 2, 3, 4, 5]
target = 9
print(meet_in_the_middle(arr, target))  # Output: True
