def networkDelayTime(times, n, k):
    # Initialize the distance matrix
    inf = float('inf')
    dist = [[inf] * (n + 1) for _ in range(n + 1)]
    
    for u, v, w in times:
        dist[u][v] = min(dist[u][v], w)
    
    # Set the distance to self as zero
    for i in range(1, n + 1):
        dist[i][i] = 0
    
    # Floyd-Warshall algorithm
    for k in range(1, n + 1):
        for i in range(1, n + 1):
            for j in range(1, n + 1):
                dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])
    
    # Calculate the maximum time to reach all nodes from k
    max_time = 0
    for i in range(1, n + 1):
        if dist[k][i] == inf:
            return -1
        max_time = max(max_time, dist[k][i])
    
    return max_time
