def median_of_medians(arr, k):
    if len(arr) < 10:
        return sorted(arr)[k]

    # Split arr into sublists of 5
    sublists = [arr[i:i + 5] for i in range(0, len(arr), 5)]
    medians = [sorted(sublist)[len(sublist) // 2] for sublist in sublists]

    # Find the median of medians
    pivot = median_of_medians(medians, len(medians) // 2)

    # Partitioning step
    low = [x for x in arr if x < pivot]
    high = [x for x in arr if x > pivot]
    k_index = len(low)

    if k_index == k:
        return pivot
    elif k < k_index:
        return median_of_medians(low, k)
    else:
        return median_of_medians(high, k - k_index - 1)

# Example usage
arr = [3, 6, 2, 7, 5, 1, 4]
k = 3
print(median_of_medians(arr, k))  # Output: 4
